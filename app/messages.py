from dataclasses import dataclass
from typing import Optional

AUTH_TOKEN_LENGTH = 32
AUTH_TIMEOUT = 300


@dataclass
class MessageTemplates:

    START: str = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!\n\n"
        "om11 –≤–∞—à –ø—Ä–æ—Ñ—Ñ–µ—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –ø–æ–º–æ—â–Ω–∏–∫\n\n"
        "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
        "üëâ /auth <–≤–∞—à_—Ç–æ–∫–µ–Ω>\n\n"
    )

    WELCOME: str = (
        "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {full_name}!\n" "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã."
    )

    AUTH_REQUIRED: str = (
        "üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è\n\n"
        "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
        "üëâ /auth <–≤–∞—à_—Ç–æ–∫–µ–Ω>\n\n"
        f"üîë –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å {AUTH_TOKEN_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤."
    )

    TELEGRAM_CONNECTED: str = (
        "ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—Å–µ –ª–æ–≥–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞.\n"
        '<a href="{server_address}">‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º</a>'
    )

    AUTH_EXPIRED: str = (
        "‚è≥ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –∏—Å—Ç–µ–∫\n" "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω."
    )

    AUTH_INVALID: str = (
        "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω\n" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    )

    HELP: str = (
        "üõ† –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/auth - –Ω–∞—á–∞—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    )


class MessageBuilder:
    def __init__(self, templates: Optional[MessageTemplates] = None):
        self.templates = templates or MessageTemplates()

    def welcome(self, full_name: str) -> str:
        return self.templates.WELCOME.format(full_name=full_name)

    def auth_required(self) -> str:
        return self.templates.AUTH_REQUIRED

    def telegram_connected(self, server_address: str) -> str:
        return self.templates.TELEGRAM_CONNECTED.format(server_address=server_address)

    def auth_expired(self) -> str:
        return self.templates.AUTH_EXPIRED

    def auth_invalid(self) -> str:
        return self.templates.AUTH_INVALID

    def help(self) -> str:
        return self.templates.HELP

    def start(self, first_name: str) -> str:
        return self.templates.START.format(first_name=first_name)
